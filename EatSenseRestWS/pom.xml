<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>net.karazy.eatsense</groupId>
	<artifactId>EatSenseRestWS</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>net.karazy.eatsense.EatSenseRestWS</name>

	<properties>

		<!-- GWT needs at least java 1.6 -->
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>

		<!-- GAE properties -->
		<gae.version>1.7.3</gae.version>
		<gae.home>${user.home}/.m2/repository/com/google/appengine/appengine-java-sdk/${gae.version}/appengine-java-sdk-${gae.version}</gae.home>
		<gae.application.version>1</gae.application.version>
		<maven-gae-plugin.version>0.9.5</maven-gae-plugin.version>

		<!-- Don't let your Mac use a crazy non-standard encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Jersey -->
		<jetty.version>7.4.1.v20110513</jetty.version>
		<jersey.version>1.9.1</jersey.version>
		<!-- guice -->
		<guice.version>3.0</guice.version>
		<!-- logging -->
		<slf4j.version>1.6.4</slf4j.version>
		<!-- objectify -->
		<objectify.version>3.1</objectify.version>

		<!-- apache bean validation -->
		<bval.version>0.4</bval.version>

		<!-- ant run plugin -->
		<antrun.version>1.7</antrun.version>
		
		<!-- Cloobster Projects -->
		<cloobster.app>../../cloobster_app/app</cloobster.app>
		<cloobster.cockpit>../../cloobster_cockpit</cloobster.cockpit>
		<cloobster.frontend>../../cloobster_frontend/</cloobster.frontend>
		
	</properties>

	<profiles>
		<profile>
			<id>doc</id>
			<build>
				<plugins>
					<plugin>
			        	<groupId>org.codehaus.enunciate</groupId>
			        	<artifactId>maven-enunciate-plugin</artifactId>
			        	<!-- check for the latest version -->
			        	<version>1.25</version>
						<configuration>
							<configFile>enunciate.xml</configFile>
						</configuration>
			        	<executions>
			          		<execution>
				            	<goals>
			              			<goal>docs</goal>
			            		</goals>
			            		<configuration>
			              			<!-- the directory where to put the docs -->
			              			<docsDir>${project.build.directory}/docs</docsDir>
			            		</configuration>
			          		</execution>
			        	</executions>
			      </plugin>
				</plugins>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.codehaus.enunciate</groupId>
												<artifactId>maven-enunciate-plugin</artifactId>
												<!-- check for the latest version -->
												<versionRange>[1.25,)</versionRange>
					        					<goals>
					              					<goal>docs</goal>
					            				</goals>
					            			</pluginExecutionFilter>
					            			<action>			            
												<execute />
											</action>
					           			</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>frontend-dev</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.4.2</version>
						<executions>
							<execution>
								<id>copy-cloobster-frontend-dev</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
									<resources>
										<resource>
											<directory>../../cloobster_frontend/src</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-cloobster-frontend-dev-tests</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}/test</outputDirectory>
									<resources>
										<resource>
											<directory>../../cloobster_frontend/test</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>		
		<profile>
			<id>website</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.4.2</version>
						<executions>
							<execution>
								<id>copy-cloobster-website</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}/</outputDirectory>
									<resources>
										<resource>
											<directory>${website.path}</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>api-dev</id>
			<build>
				<filters>
                    <filter>${basedir}/src/main/filters/dev.properties</filter>
                </filters>
            </build>
        </profile>
        <profile>
        	<id>app-dev</id>
        	<build>
        		<plugins>
	        		<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.4.2</version>
						<executions>
			        		<execution>
								<id>copy-app-dev</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}/app</outputDirectory>
									<resources>
										<resource>
											<directory>${cloobster.app}/src</directory>
												<excludes>
												<exclude>**/*.phone.*</exclude>
												<exclude>**/*.iphone.*</exclude>
											</excludes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
        		</plugins>
        	</build>
        </profile>
        
		<profile>
			<id>dev</id>
			<build>
				<filters>
                    <filter>${basedir}/src/main/filters/dev.properties</filter>
                </filters>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.4.2</version>
						<executions>
							<execution>
								<id>copy-cloobster-frontend-dev</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}/</outputDirectory>
									<resources>
										<resource>
											<directory>${cloobster.frontend}/src/</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-cloobster-frontend-dev-tests</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}/test</outputDirectory>
									<resources>
										<resource>
											<directory>${cloobster.frontend}/test</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
<!-- 							<execution> -->
<!-- 								<id>copy-admin-dev</id> -->
<!-- 								<phase>compile</phase> -->
<!-- 								<goals> -->
<!-- 									<goal>copy-resources</goal> -->
<!-- 								</goals> -->
<!-- 								<configuration> -->
<!-- 									<outputDirectory>${project.build.directory}/${project.build.finalName}/admin/</outputDirectory> -->
<!-- 									<resources> -->
<!-- 										<resource> -->
<!-- 											<directory>src/main/admin</directory> -->
<!-- 											<includes> -->
<!-- 												<include>js/app.js</include> -->
<!-- 											</includes> -->
<!-- 											Filter app.js with properties. -->
<!-- 											<filtering>true</filtering> -->
<!-- 										</resource> -->
<!-- 										<resource> -->
<!-- 											<directory>src/main/admin</directory> -->
<!-- 											<excludes> -->
<!-- 												<exclude>js/app.js</exclude> -->
<!-- 											</excludes> -->
<!-- 											<filtering>false</filtering> -->
<!-- 										</resource> -->
<!-- 									</resources> -->
<!-- 								</configuration> -->
<!-- 							</execution> -->
							<execution>
								<id>copy-cockpit-dev</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}/cockpit</outputDirectory>
									<resources>
										<resource>
											<directory>${cloobster.cockpit}/src</directory>
										</resource>
									</resources>
								</configuration>	
							</execution>							
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>app-prod</id>
			<build>
				<filters>
            		<filter>${basedir}/src/main/filters/prod.properties</filter>
            	</filters>	
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.4.2</version>
						<executions>
							<execution>
								<id>copy-app-prod</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}/app/</outputDirectory>
									<resources>
										<resource>
											<directory>${cloobster.app}/prod/desktop/build/EatSense/package</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
				<profile>
			<id>cockpit-prod</id>
			<build>
				<filters>
            		<filter>${basedir}/src/main/filters/prod.properties</filter>
            	</filters>	
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.4.2</version>
						<executions>
							<execution>
								<id>copy-cockpit-prod</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}/cockpit</outputDirectory>
									<resources>
										<resource>
											<directory>${cloobster.cockpit}/build/production</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<build>
				<filters>
            		<filter>${basedir}/src/main/filters/prod.properties</filter>
            	</filters>	
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.4.2</version>
						<executions>
							<execution>
								<id>copy-cloobster-frontend-prod</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
									<resources>
										<resource>
											<directory>${cloobster.frontend}/build</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-admin-prod</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}/admin</outputDirectory>
									<resources>
										<resource>
											<directory>${cloobster.frontend}/src/admin</directory>
											<includes>
												<include>js/app.js</include>
											</includes>
											<!-- Filter app.js with properties. -->
											<filtering>true</filtering>
										</resource>
										<resource>
											<directory>${cloobster.frontend}/src/admin</directory>
											<excludes>
												<exclude>js/app.js</exclude>
											</excludes>
											<filtering>false</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-cockpit-prod</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}/cockpit</outputDirectory>
									<resources>
										<resource>
											<directory>${cloobster.cockpit}/build/production</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>objectify-appengine</id>
			<url>http://objectify-appengine.googlecode.com/svn/maven</url>
		</repository>
		<repository>
			<id>sli4j-repository</id>
			<name>sli4j Repository for Maven</name>
			<url>http://sli4j.googlecode.com/svn/repo</url>
			<layout>default</layout>
		</repository>
		<repository>
      		<id>owasp-java-html-sanitizer</id>
      		<url>http://owasp-java-html-sanitizer.googlecode.com/svn/maven</url>
   		</repository>
	</repositories>

	<dependencies>
	 	<dependency>
      		<groupId>owasp-java-html-sanitizer</groupId>
      		<artifactId>owasp-java-html-sanitizer</artifactId>
      		<version>r129</version>
      		<scope>compile</scope>
    	</dependency>
		<!-- From local repository -->
		<dependency>
			<groupId>com.innovatics</groupId>
			<artifactId>pdfjet</artifactId>
			<version>3.11</version>
		</dependency>
		<dependency>
    		<groupId>com.google.guava</groupId>
    		<artifactId>guava</artifactId>
    		<version>12.0</version>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.mindrot</groupId>
			<artifactId>jbcrypt</artifactId>
			<version>0.3m</version>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>com.jayway.restassured</groupId> -->
		<!-- <artifactId>rest-assured</artifactId> -->
		<!-- <version>1.5</version> -->
		<!-- <scope>test</scope> -->
		<!-- </dependency> -->
		<!-- Apache Bean Validation dependencies -->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-validation_1.0_spec</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.bval</groupId>
			<artifactId>org.apache.bval.bundle</artifactId>
			<version>${bval.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.bval</groupId>
			<artifactId>bval-guice</artifactId>
			<version>${bval.version}</version>
		</dependency>

		<!-- Objectify/Twig for object persistence -->

		<!-- <dependency> <groupId>com.google.code.twig</groupId> <artifactId>twig-persist</artifactId> 
			<version>2.0-beta3</version> </dependency> -->
		<dependency>
			<groupId>com.googlecode.objectify</groupId>
			<artifactId>objectify</artifactId>
			<version>${objectify.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>



		<!-- Logging slf4j -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- Automatic injection of logger object. Didn't work for me <dependency> 
			<groupId>com.googlecode.sli4j</groupId> <artifactId>sli4j-slf4j</artifactId> 
			<version>2.0</version> </dependency> -->

		<!-- Google App Engine (GAE) -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${gae.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${gae.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${gae.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>${jetty.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>${guice.version}</version>
		</dependency>

		<!-- Jersey for RESTful webservices -->
		<!-- jersey core -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<!-- used to process JAXB annotations -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>jaxb-impl</artifactId>
					<groupId>com.sun.xml.bind</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jaxb-api</artifactId>
					<groupId>javax.xml.bind</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jersey-ejb</artifactId>
					<groupId>com.sun.jersey.server.impl.ejb</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Configure jersey through guice -->
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-guice</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<!-- Ant run plugin for special purposes -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.apache.maven.plugins</groupId> -->
<!-- 			<artifactId>maven-antrun-plugin</artifactId> -->
<!-- 			<version>${antrun.version}</version> -->
<!-- 			<scope>provided</scope> -->
<!-- 		</dependency> -->
		<dependency>
			<groupId>org.joda</groupId>
			<artifactId>joda-money</artifactId>
			<version>0.6</version>
		</dependency>

		<!-- Unit tests -->

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-integration</artifactId>
			<version>1.2.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit-dep</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
  			<artifactId>mockito-core</artifactId>  
  			<version>1.9.0</version> 
  			<scope>test</scope>
  		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<classifier>api</classifier>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<!-- Generate compiled stuff in the folder used for development mode -->
		<outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
		<plugins>
			<!-- Add source folders to test classpath in order to run gwt-tests as 
				normal junit-tests -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
						<additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
					</additionalClasspathElements>
					<useManifestOnlyJar>false</useManifestOnlyJar>
					<forkMode>always</forkMode>

					<!-- Folder for generated testing stuff -->
					<systemProperties>
						<property>
							<name>gwt.args</name>
							<value>-out ${project.build.directory}/${project.build.finalName}</value>
						</property>
					</systemProperties>
					<excludes>
						<exclude>**/*IntegrationTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<includes>
						<include>**/*IntegrationTest.java</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Copy static web files before executing gwt:run -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.2</version>
				<executions>
					<execution>
						<id>copy-general-res</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
							<resources>
								<resource>
                					<directory>${basedir}/src/main/webapp</directory>
                					<filtering>true</filtering>
                					<includes>
                    					<include>WEB-INF/web.xml</include>
                					</includes>
								</resource>
								<resource>
									<directory>${basedir}/src/main/webapp</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>app/**/*.phone.*</exclude>
										<exclude>app/**/*.iphone.*</exclude>
										<exclude>app/**/*.ignore.*</exclude>
										<exclude>WEB-INF/web.xml</exclude>
									</excludes>
								</resource>
								<!-- Add filtering of web.xml for system properties -->

							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>build-helper-maven-plugin</artifactId> 
				<version>1.7</version> <executions> <execution> <id>add-resource</id> <phase>compile</phase> 
				<goals> <goal>add-resource</goal> </goals> <configuration> <resources> <resource> 
				<directory>../EatSenseApp/WebContent/</directory> <targetPath>${project.build.directory}/${project.build.finalName}</targetPath> 
				<excludes> <exclude>**/*.phone.*</exclude> </excludes> </resource> </resources> 
				<resource> </resource> </configuration> </execution> </executions> </plugin> -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${antrun.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<configuration>
							<target>
								<ant target="default" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
                <groupId>net.kindleit</groupId>
                <artifactId>maven-gae-plugin</artifactId>
                <version>${maven-gae-plugin.version}</version>
                <dependencies>
                  <dependency>
                    <groupId>net.kindleit</groupId>
                    <artifactId>gae-runtime</artifactId>
                    <version>${gae.version}</version>
                    <type>pom</type>
                  </dependency>
                </dependencies>
                <executions>
	          		<execution>
	            	<id />
	            		<phase>validate</phase>
	            	<goals>
	              		<goal>unpack</goal>
	            		</goals>
	          		</execution>
	        	</executions>
            </plugin>
			<!-- Mark the project for Google Plugin for Eclipse (GPE) -->
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
					<additionalProjectnatures>
						<projectnature>com.google.appengine.eclipse.core.gaeNature</projectnature>
					</additionalProjectnatures>
				</configuration>
			</plugin>
		</plugins>
		<!-- Required by m2e for import into eclipse. No effect on command line 
			builds -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-resources-plugin</artifactId>
										<versionRange>[2.0.0,)</versionRange>
										<goals>
											<goal>copy-resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>${antrun.version}</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.google.code.maven-replacer-plugin</groupId>
										<artifactId>maven-replacer-plugin</artifactId>
										<versionRange>1.4.0</versionRange>
										<goals>
											<goal>replace</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
                  					<pluginExecutionFilter>
                    					<groupId>net.kindleit</groupId>
					                    <artifactId>maven-gae-plugin</artifactId>
					                    <versionRange>[0.7.3,)</versionRange>
					                    <goals>
					                      <goal>unpack</goal>
					                    </goals>
					                </pluginExecutionFilter>
					             	<action>
					                	<execute />
					                </action>
				                </pluginExecution>
				                
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>1.2.1</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>